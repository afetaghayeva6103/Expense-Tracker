@model Expense_Tracker.Models.CategoryDto

@{
    ViewData["PageTitle"] = Model.Id == 0 ? "Create a new category" : "Edit category";
}

<div class="row">
    <div class="col-md-12">
        <div class="widget p-5" style="background-color:#212b36">
            <form asp-action="AddOrEdit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" name="id" value="@Model.Id" />
                <div class="mb-3">
                    <div class='e-btn-group custom-rbt-group'>
                        <input type="radio" id="radioleft" name="CategoryType" value="Expense" checked="@(Model.CategoryType==ExpenseTracker.Domain.Enums.CategoryType.Expense)" />
                        <label class="e-btn" for="radioleft">Expense</label>
                        <input type="radio" id="radiomiddle" name="CategoryType" value="Income" checked="@(Model.CategoryType==ExpenseTracker.Domain.Enums.CategoryType.Income)" />
                        <label class="e-btn" for="radiomiddle">Income</label>
                    </div>
                    <span asp-validation-for="CategoryType" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <ejs-textbox id="title" placeholder="Title" ejs-for="Title" floatLabelType="Always"></ejs-textbox>
                    <span asp-validation-for="Title" class="text-danger fs-6"></span>
                </div>
                <ejs-button id="submit" typeof="submit" content="Submit" cssClass="e-success"></ejs-button>
            </form>
        </div>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}